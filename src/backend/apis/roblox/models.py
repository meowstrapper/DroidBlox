from dataclasses import dataclass
from typing import Literal

__all__ = ["User", "Game", "Thumbnail"]

@dataclass
class User:
    name: str
    displayName: str
    isVerified: bool

    @classmethod
    def deserialize(cls, jsonData: dict):
        return cls(
            name = jsonData.get("name"), displayName = jsonData.get("displayName"),
            isVerified = jsonData.get("hasVerifiedBadge")
        )

@dataclass
class Game:
    name: str
    creator: str
    placeId: int
    universeId: int

    @classmethod
    def deserialize(cls, jsonData: dict):
        return cls(
            name = jsonData.get("name"), creator = jsonData.get("creator").get("name"),
            placeId = jsonData.get("rootPlaceId"), universeId = jsonData.get("id")
        )

@dataclass
class Thumbnail:
    targetId: int
    type: Literal[
        "Asset", "AutoGeneratedAsset", "AutoGeneratedGameIcon", "Avatar",
        "AvatarBust", "AvatarHeadShot", "BadgeIcon", "BundleThumbnail",
        "CreatorContextAsset", "DeveloperProduct", "ForceAutoGeneratedGameIcon", "GameIcon",
        "GamePass", "GameThumbnail", "GroupIcon", "Look",
        "Outfit", "PlaceIcon", "Screenshot"
    ]
    size: Literal[
        "30x30", "42x42", "50x50", "60x62",
        "75x75", "110x110", "140x140", "150x150",
        "160x100", "160x600", "250x250", "256x144",
        "300x250", "304x166", "384x216", "396x216",
        "420x420", "480x270", "512x512", "576x324",
        "700x700", "728x90", "768x432", "1200x80",
        "330x110", "660x220", "1320x440", "720x228", "1440x456"
    ]
    isCircular: bool

    def toDict(self):
        return self.__dict__